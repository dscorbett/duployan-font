# Copyright 2019 David Corbett
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Test
on: push
env:
  FONTFORGE_VERSION: 20190801
  HARFBUZZ_VERSION: 2.5.2
  PYTHON_VERSION: 3.7
jobs:
  test:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        requirements:
          - frozen
          - oldest
          - newest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Cache FontForge
        id: cache-fontforge
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-fontforge-${{ env.FONTFORGE_VERSION }}-python-${{ env.PYTHON_VERSION }}
          path: fontforge-${{ env.FONTFORGE_VERSION }}
      - name: Install FontForge
        if: steps.cache-fontforge.outputs.cache-hit != 'true'
        run: |
          sudo apt-get -qy --no-install-recommends install \
            automake \
            build-essential \
            packaging-dev \
            pkg-config \
            python${{ env.PYTHON_VERSION }}-dev \
          ;
          curl -L https://github.com/fontforge/fontforge/releases/download/${{ env.FONTFORGE_VERSION }}/fontforge-${{ env.FONTFORGE_VERSION }}.tar.gz \
          | tar -xz
          cd fontforge-${{ env.FONTFORGE_VERSION }}
          ./bootstrap
          PYTHON_CFLAGS="$(python3-config --cflags)" \
          PYTHON_LIBS="$(python3-config --ldflags)" \
          ./configure \
            --prefix="$PWD/target" \
            --disable-dependency-tracking \
            --disable-maintainer-mode \
            --disable-native-scripting \
            --disable-programs \
            --enable-python-extension \
            --enable-python-scripting=3 \
            --without-cairo \
            --without-giflib \
            --without-libjpeg \
            --without-libpng \
            --without-libreadline \
            --without-libspiro \
            --without-libtiff \
            --without-libuninameslist \
            --without-libzmq \
            --without-x \
          ;
          sudo make install
          sudo ldconfig
      - name: Add site-packages to default search path
        run: echo "PYTHONPATH=$PWD/fontforge-${{ env.FONTFORGE_VERSION }}/target/lib/python${{ env.PYTHON_VERSION }}/site-packages:$PYTHONPATH" >>"$GITHUB_ENV"
      - name: Cache HarfBuzz
        id: cache-harfbuzz
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-harfbuzz-${{ env.HARFBUZZ_VERSION }}
          path: .hb/harfbuzz-${{ env.HARFBUZZ_VERSION }}
      - name: Install HarfBuzz
        if: steps.cache-harfbuzz.outputs.cache-hit != 'true'
        run: make HB_VERSION=${{ env.HARFBUZZ_VERSION }} hb-shape
      - name: Add HarfBuzz to path
        run: echo "$PWD/.hb/harfbuzz-${{ env.HARFBUZZ_VERSION }}/util" >>"$GITHUB_PATH"
      - name: Prepare oldest requirements
        if: matrix.requirements == 'oldest'
        run: |
          pip install packaging
          ./get-old-requirements.py --input requirements-to-freeze.txt --output requirements.txt
      - name: Prepare newest requirements
        if: matrix.requirements == 'newest'
        run: cp requirements-to-freeze.txt requirements.txt
      - name: Install requirements
        run: pip install --upgrade --upgrade-strategy eager -r requirements.txt
      - name: Build
        run: make
      - name: Test
        run: make check
